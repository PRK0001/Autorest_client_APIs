// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Microsoft.PowerBI.Api.Models
{
    /// <summary> Model factory for models. </summary>
    public static partial class MicrosoftPowerBIApiModelFactory
    {
        /// <summary> Initializes a new instance of <see cref="Models.Reports"/>. </summary>
        /// <param name="odataContext"> OData context. </param>
        /// <param name="value"> The report collection. </param>
        /// <returns> A new <see cref="Models.Reports"/> instance for mocking. </returns>
        public static Reports Reports(string odataContext = null, IEnumerable<Report> value = null)
        {
            value ??= new List<Report>();

            return new Reports(odataContext, value?.ToList());
        }

        /// <summary> Initializes a new instance of <see cref="Models.Report"/>. </summary>
        /// <param name="id"> The report ID. </param>
        /// <param name="name"> The name of the report. </param>
        /// <param name="datasetId"> The dataset ID of the report. </param>
        /// <param name="appId"> The app ID, returned only if the report belongs to an app. </param>
        /// <param name="description"> The report description. </param>
        /// <param name="reportType"> The report type. </param>
        /// <param name="originalReportId"> The actual report ID when the workspace is published as an app. </param>
        /// <param name="isOwnedByMe"> Determine if the report is created by the current user. </param>
        /// <returns> A new <see cref="Models.Report"/> instance for mocking. </returns>
        public static Report Report(Guid id = default, string name = null, string datasetId = null, string appId = null, string description = null, ReportBasePropertiesReportType? reportType = null, Guid? originalReportId = null, bool? isOwnedByMe = null)
        {
            return new Report(
                id,
                name,
                datasetId,
                appId,
                description,
                reportType,
                originalReportId,
                isOwnedByMe);
        }

        /// <summary> Initializes a new instance of <see cref="Models.ReportBaseProperties"/>. </summary>
        /// <param name="id"> The report ID. </param>
        /// <param name="name"> The name of the report. </param>
        /// <param name="datasetId"> The dataset ID of the report. </param>
        /// <param name="appId"> The app ID, returned only if the report belongs to an app. </param>
        /// <param name="description"> The report description. </param>
        /// <param name="reportType"> The report type. </param>
        /// <param name="originalReportId"> The actual report ID when the workspace is published as an app. </param>
        /// <param name="isOwnedByMe"> Determine if the report is created by the current user. </param>
        /// <returns> A new <see cref="Models.ReportBaseProperties"/> instance for mocking. </returns>
        public static ReportBaseProperties ReportBaseProperties(Guid id = default, string name = null, string datasetId = null, string appId = null, string description = null, ReportBasePropertiesReportType? reportType = null, Guid? originalReportId = null, bool? isOwnedByMe = null)
        {
            return new ReportBaseProperties(
                id,
                name,
                datasetId,
                appId,
                description,
                reportType,
                originalReportId,
                isOwnedByMe);
        }

        /// <summary> Initializes a new instance of <see cref="Models.Export"/>. </summary>
        /// <param name="id"> The export to file job ID. </param>
        /// <param name="createdDateTime"> The start date and time of the export to file job. </param>
        /// <param name="lastActionDateTime"> The date and time of the last change to the export to file job. </param>
        /// <param name="reportId"> The ID of the exported report. </param>
        /// <param name="reportName"> The name of the exported report. </param>
        /// <param name="status"> The current state of the export to file job. </param>
        /// <param name="percentComplete"> Percentage completion of the export job. </param>
        /// <param name="resourceLocation"> The location where the exported file can be retrieved. </param>
        /// <param name="resourceFileExtension"> The file extension of the exported file. </param>
        /// <param name="expirationTime"> The time when the exported file will expire. </param>
        /// <returns> A new <see cref="Models.Export"/> instance for mocking. </returns>
        public static Export Export(string id = null, DateTimeOffset? createdDateTime = null, DateTimeOffset? lastActionDateTime = null, Guid? reportId = null, string reportName = null, ExportStatus? status = null, int? percentComplete = null, string resourceLocation = null, string resourceFileExtension = null, DateTimeOffset? expirationTime = null)
        {
            return new Export(
                id,
                createdDateTime,
                lastActionDateTime,
                reportId,
                reportName,
                status,
                percentComplete,
                resourceLocation,
                resourceFileExtension,
                expirationTime);
        }
    }
}
